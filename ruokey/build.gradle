plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.moowork.node' version '1.3.1'
	id 'java'
}

group = 'com.hih.ruokey'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'
compileJava.options.encoding = "UTF-8"


repositories {
	mavenCentral()
}

dependencies {
	comileOnly('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.slf4j:jcl-over-slf4j')
	implementation('ch.qos.logback.:logback:classic')
	testImplementation('org.springframework.boot:spring-boot-starter-test'){
		exclude module: 'junit'
	}
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
	testAnnotationProcessor('org.projectlombok:lombok')

 	runtimeOnly 'mysql:mysql-connector-java'
}


node {
	workDir = file("./src/frontend")
	npmWorkDir = file("./src/frontend")
	nodeModulesDir = file("./src/frontend")
}


task setUp(type: NpmTask) {
	description = "Install Node.js Packages"
	args = ['install']
	inputs.files file('package.json')
	outputs.files file('node_modules')
}

task buildFrontEnd(type: NpmTask, dependsOn:['setUp']){
	description = "Build vue.js"
	args = ['run', 'build']
	
}

processResources.dependsOn 'buildFrontEnd'

test {
	useJUnitPlatform()
}
